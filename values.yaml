# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Please do not change anything if you dont know what you are doing


# Optionally override the fully qualified name
fullnameOverride: ""

# Optionally override the name
nameOverride: ""


image:
  # The Ever-Gauzy image repository
  repository: everco/gauzy-api-demo
  # Overrides the Ever-Gauzy image tag whose default is the chart appVersion
  tag: "1.0.1"
  # The Ever-Gauzy image pull policy
  pullPolicy: IfNotPresent

# Image pull secrets for the Pod
imagePullSecrets: []
# - name: myRegistrKeySecretName


service:
  # Annotations for headless and HTTP Services
  annotations: {}
  # Additional labels for headless and HTTP Services
  labels: {}
  # key: value
  # The Service type
  type: ClusterIP
  # Optional IP for the load balancer. Used for services of type LoadBalancer only
  loadBalancerIP: ""
  # The http Service port
  httpPort: 80
  # The HTTP Service node port if type is NodePort
  httpNodePort: null
  # The HTTPS Service port
  httpsPort: 8443
  # The HTTPS Service node port if type is NodePort
  httpsNodePort: null
  # Additional Service ports, e. g. for custom admin console
  extraPorts: []
  # When using Service type LoadBalancer, you can restrict source ranges allowed
  # to connect to the LoadBalancer, e. g. will result in Security Groups
  # (or equivalent) with inbound source ranges allowed to connect
  loadBalancerSourceRanges: []
  # When using Service type LoadBalancer, you can preserve the source IP seen in the container
  # by changing the default (Cluster) to be Local.
  # See https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  externalTrafficPolicy: "Cluster"
  # Session affinity
  # See https://kubernetes.io/docs/concepts/services-networking/service/#proxy-mode-userspace
  sessionAffinity: ""
  # Session affinity config
  sessionAffinityConfig: {}

#Below this siteIP and sites will be writen inside th hosts file of the pods
siteIP: "172.17.177.89"

sites: |
  [ 'demo.api.in']

postgresql:
  enabled: true
  global:
    storageClass: "nfs-client"
    postgresql:
      postgresqlDatabase: "usersdb"
      postgresqlPassword: "Hello@123"
      postgresqlUsername: "userservice-pguser"
      servicePort: "5432"
externalDB:
    enable: false
    DB_URI: '$DB_URI'
    DB_HOST: '$DB_HOST'
    DB_SSL_MODE: '$DB_SSL_MODE'
    DB_CA_CERT: '$DB_CA_CERT'
    DB_USER: '$DB_USER'
    DB_PASS: '$DB_PASS'
    DB_TYPE: '$DB_TYPE'
    DB_NAME: '$DB_NAME'
    DB_PORT: '$DB_PORT'
wasabi:
    enable: false
    WASABI_ACCESS_KEY_ID: '$WASABI_ACCESS_KEY_ID'
    WASABI_SECRET_ACCESS_KEY: '$WASABI_SECRET_ACCESS_KEY'
    WASABI_REGION: '$WASABI_REGION'
    WASABI_SERVICE_URL: '$WASABI_SERVICE_URL'
    WASABI_S3_BUCKET: '$WASABI_S3_BUCKET'
cloudinary:
    enable: false
    CLOUDINARY_API_KEY: '$CLOUDINARY_API_KEY'
    CLOUDINARY_API_SECRET: '$CLOUDINARY_API_SECRET'
    CLOUDINARY_CLOUD_NAME: '$CLOUDINARY_CLOUD_NAME'
aws:
 enable: false
 AWS_ACCESS_KEY_ID: '$AWS_ACCESS_KEY_ID'
 AWS_SECRET_ACCESS_KEY: '$AWS_SECRET_ACCESS_KEY'
 AWS_REGION: '$AWS_REGION'
 AWS_S3_BUCKET: '$AWS_S3_BUCKET'

DEFAULT_CURRENCY: 'USD'

mail:
    enable: true
    MAIL_FROM_ADDRESS: '$MAIL_FROM_ADDRESS'
    MAIL_HOST: '$MAIL_HOST'
    MAIL_PORT: '$MAIL_PORT'
    MAIL_USERNAME: '$MAIL_USERNAME'
    MAIL_PASSWORD: '$MAIL_PASSWORD'

WEB: DEV
WEB_ENV:
  APP_ENV: "DEV"
  DEMO: 'true'
  API_BASE_URL: 'https://apidemo.gauzy.co'
  CLIENT_BASE_URL: 'https://demo.gauzy.co'
  SENTRY_DSN: 'https://7cd381188b6f446ca0e69185227b9031@o51327.ingest.sentry.io/4397292'
  CHATWOOT_SDK_TOKEN: 'jFoSXEjGmqhUhqU3zfgkFfMt'
  CLOUDINARY_API_KEY: '256868982483961'
  CLOUDINARY_CLOUD_NAME: 'dv6ezkfxg'
  GOOGLE_MAPS_API_KEY: 'AIzaSyCJmnKzgTSq5Pc93HXar5bZrdmANTwtSIo'
  GOOGLE_PLACE_AUTOCOMPLETE: 'true'
  DEFAULT_LATITUDE: '42.6459136'
  DEFAULT_LONGITUDE: '23.3332736'
  DEFAULT_CURRENCY: 'USD'
  GAUZY_GITHUB_CLIENT_ID: '$GAUZY_GITHUB_CLIENT_ID'
  GAUZY_GITHUB_APP_NAME: '$GAUZY_GITHUB_APP_NAME'
  GAUZY_GITHUB_REDIRECT_URL: '$GAUZY_GITHUB_REDIRECT_URL'
  GAUZY_GITHUB_POST_INSTALL_URL: '$GAUZY_GITHUB_POST_INSTALL_URL'
  GAUZY_GITHUB_APP_ID: '$GAUZY_GITHUB_APP_ID'
  JITSU_BROWSER_URL: '$JITSU_BROWSER_URL'
  JITSU_BROWSER_WRITE_KEY: '$JITSU_BROWSER_WRITE_KEY'

API: DEV
API_DEV:
  GIT_DEVELOPMENT_BRANCH: "main"
  GIT_PRODUCTION_BRANCH: "master"
  API_HOST: gauzy-demo-api
  DEMO: true
  NODE_ENV: development
  ADMIN_PASSWORD_RESET: true
  LOG_LEVEL: info
  SENTRY_DSN: 'https://7cd381188b6f446ca0e69185227b9031@o51327.ingest.sentry.io/4397292'
  SENTRY_HTTP_TRACING_ENABLED: false
  SENTRY_POSTGRES_TRACKING_ENABLED: false
  API_BASE_URL: 'https://apidemo.gauzy.co'
  CLIENT_BASE_URL: 'https://demo.gauzy.co'
  EXPRESS_SESSION_SECRET: gauzy
  JWT_SECRET: secretKey
  JWT_REFRESH_TOKEN_SECRET: refreshSecretKey
  JWT_REFRESH_TOKEN_EXPIRATION_TIME: '86400'
  ALLOW_SUPER_ADMIN_ROLE: '$ALLOW_SUPER_ADMIN_ROLE'
  GOOGLE_CLIENT_ID: '$GOOGLE_CLIENT_ID'
  GOOGLE_CLIENT_SECRET: '$GOOGLE_CLIENT_SECRET'
  GOOGLE_CALLBACK_URL: '$GOOGLE_CALLBACK_URL'
  FACEBOOK_CLIENT_ID: '$FACEBOOK_CLIENT_ID'
  FACEBOOK_CLIENT_SECRET: '$FACEBOOK_CLIENT_SECRET'
  FACEBOOK_GRAPH_VERSION: '$FACEBOOK_GRAPH_VERSION'
  FACEBOOK_CALLBACK_URL: '$FACEBOOK_CALLBACK_URL'
  INTEGRATED_USER_DEFAULT_PASS: '$INTEGRATED_USER_DEFAULT_PASS'
  UPWORK_REDIRECT_URL: '$UPWORK_REDIRECT_URL'
  FILE_PROVIDER: '$FILE_PROVIDER'
  GAUZY_AI_GRAPHQL_ENDPOINT: '$GAUZY_AI_GRAPHQL_ENDPOINT'
  GAUZY_AI_REST_ENDPOINT: '$GAUZY_AI_REST_ENDPOINT'
  UNLEASH_APP_NAME: '$UNLEASH_APP_NAME'
  UNLEASH_API_URL: '$UNLEASH_API_URL'
  UNLEASH_INSTANCE_ID: '$UNLEASH_INSTANCE_ID'
  UNLEASH_REFRESH_INTERVAL: '$UNLEASH_REFRESH_INTERVAL'
  UNLEASH_METRICS_INTERVAL: '$UNLEASH_METRICS_INTERVAL'
  UNLEASH_API_KEY: '$UNLEASH_API_KEY'
  PM2_PUBLIC_KEY: '$PM2_PUBLIC_KEY'
  PM2_SECRET_KEY: '$PM2_SECRET_KEY'
  PM2_MACHINE_NAME: '$PM2_MACHINE_NAME'
  JITSU_SERVER_URL: '$JITSU_SERVER_URL'
  JITSU_SERVER_WRITE_KEY: '$JITSU_SERVER_WRITE_KEY'
  GAUZY_GITHUB_CLIENT_ID: '$GAUZY_GITHUB_CLIENT_ID'
  GAUZY_GITHUB_CLIENT_SECRET: '$GAUZY_GITHUB_CLIENT_SECRET'
  GAUZY_GITHUB_WEBHOOK_URL: '$GAUZY_GITHUB_WEBHOOK_URL'
  GAUZY_GITHUB_WEBHOOK_SECRET: '$GAUZY_GITHUB_WEBHOOK_SECRET'
  GAUZY_GITHUB_APP_PRIVATE_KEY: '$GAUZY_GITHUB_APP_PRIVATE_KEY'
  GAUZY_GITHUB_APP_ID: '$GAUZY_GITHUB_APP_ID'
  GAUZY_GITHUB_APP_NAME: '$GAUZY_GITHUB_APP_NAME'
  GAUZY_GITHUB_CALLBACK_URL: '$GAUZY_GITHUB_CALLBACK_URL'
  GAUZY_GITHUB_POST_INSTALL_URL: '$GAUZY_GITHUB_POST_INSTALL_URL'

variables:
  apiServiceName: gauzy-demo-api
  apiServiceType: LoadBalancer
  apiServicePort: 8WEB_ENV0
  apiServiceTargetPort: 3000
  apiServicePortLts: 443
  hostName: lsg.gov.bd

  # if values is false, then creating ingress will be escape
  enableEngress: true
  ingressRules: []
  # ingress cluster-issuer class
  ingressClusterIssuer: "k-issuer"

  # is lts acme, value is boolean
  ltsAcme: false

  # app version, changing version will auto deploy the app to current version

  imageAppVersion: "latest"
  apiImageAppVersion: "latest"

  # increase this when you need scale up
  replicaCount: 1

  apiReplicaCount: 1

  imagePullPolicy: IfNotPresent
  imagePullSecrets: regcred
  serviceType: LoadBalancer

  # service port, this provide traffic to ingress within this port
  servicePortLts: 443

  servicePort: 80

  # target container port
  serviceTargetPort: 4200

  #app buil image
  imageRepository: "everco/gauzy-webapp-demo"
  apiImageRepository: "everco/gauzy-api-demo"

#auto scaling config
autoScaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 20
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  # with this time if uses of resource up/down then do not autoscale down
  stabilizationWindowSecondsForScaleDown: 1200

resources:
  requests:
    memory: "500Mi"
    cpu: "500m"

storageClass: "nfs-client"
size: 1Gi
affinityEnable: ture
affinity:
    nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
                - matchExpressions:
                      - key: topology.kubernetes.io/region
                        operator: In
                        values:
                            - ORD1
                      - key: node.coreweave.cloud/cpu
                        operator: In
                        values:
                            - intel-xeon-v3
    podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                  labelSelector:
                      matchExpressions:
                          - key: app
                            operator: In
                            values:
                                - gauzy-stage-api
                  topologyKey: kubernetes.io/hostname
              weight: 1


serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # Specifies whether the ServiceAccount can get and list pods
  allowReadPods: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Additional annotations for the ServiceAccount
  annotations: {}
  # Additional labels for the ServiceAccount
  labels: {}
  # Image pull secrets that are attached to the ServiceAccount
  imagePullSecrets: []
  # Automount API credentials for the Service Account
  automountServiceAccountToken: true

rbac:
  create: false
  rules: []
  # RBAC rules for KUBE_PING
  #  - apiGroups:
  #      - ""
  #    resources:
  #      - pods
  #    verbs:
  #      - get
  #      - list