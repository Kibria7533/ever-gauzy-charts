apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.variables.apiServiceName }}
  labels:
    app: {{ .Values.variables.apiServiceName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.variables.apiServiceName }}
  replicas: {{ .Values.variables.apiReplicaCount }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.variables.apiServiceName }}
    spec:
      {{ if .Values.affinityEnable }}
      affinity:
        {{- toYaml .Values.affinity | nindent 7 }}
      {{end}}
      containers:
        - name: {{ .Values.variables.apiServiceName }}
          image: "{{ .Values.variables.apiImageRepository }}:{{ .Values.variables.apiImageAppVersion  | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.variables.imagePullPolicy }}
          ports:
            - containerPort: 3000
              protocol: TCP
              {{- with .Values.extraPorts }}
              {{- toYaml . | nindent 12 }}
              {{- end }}
          env:
            {{ if .Values.enableMail }}
              {{- range $key, $val := .Values.mailConfig }}
              - name: {{ $key }}
                value: {{ $val | quote }}
              {{- end }}
              {{end}}
            {{ if .Values.enableAWS }}
              {{- range $key, $val := .Values.aws }}
              - name: {{ $key }}
                value: {{ $val | quote }}
              {{- end }}
              {{end}}
            {{ if .Values.enableCloudinary }}
              {{- range $key, $val := .Values.cloudinary }}
              - name: {{ $key }}
                value: {{ $val | quote }}
              {{- end }}
              {{end}}
            {{ if .Values.enableWasabi }}
              {{- range $key, $val := .Values.wasabi }}
              - name: {{ $key }}
                value: {{ $val | quote }}
              {{- end }}
              {{end}}
            {{ if eq .Values.API "DEV" }}
              {{- range $key, $val := .Values.API_DEV }}
              - name: {{ $key }}
                value: {{ $val | quote }}
              {{- end }}
              {{end}}
              {{- if .Values.postgresql.enabled }}
              - name: DB_HOST
                value: "{{ .Release.Name}}-postgresql-headless"
              - name: DB_NAME
                value: {{ .Values.postgresql.global.postgresql.postgresqlDatabase | quote }}
              - name: DB_PASS
                value: {{ .Values.postgresql.global.postgresql.postgresqlPassword | quote }}
              - name: DB_USER
                value: {{ .Values.postgresql.global.postgresql.postgresqlUsername | quote }}
              - name: DB_PORT
                value: {{ .Values.postgresql.global.postgresql.servicePort | quote }}
              {{- end }}
          {{- if .Values.command }}
          command:
            {{- toYaml .Values.command | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          {{- with .Values.lifecycleHooks }}
          lifecycle:
          {{- tpl . $ | nindent 12 }}
          {{- end }}
      hostAliases:
      - ip: {{ .Values.siteIP }}
        hostnames: {{ .Values.sites }}
      volumes:
        - name: "{{ .Chart.Name }}"
          persistentVolumeClaim:
            claimName: "{{ .Chart.Name }}-pv-claim"
        {{- with .Values.extraVolumes }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      imagePullSecrets:
        - name: {{ .Values.variables.imagePullSecrets }}
